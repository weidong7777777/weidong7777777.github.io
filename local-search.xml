<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>AWD比赛经验及命令防御篇</title>
    <link href="/2020/03/16/AWD%E6%AF%94%E8%B5%9B%E7%BB%8F%E9%AA%8C%E5%8F%8A%E5%91%BD%E4%BB%A4%E9%98%B2%E5%BE%A1%E7%AF%87/"/>
    <url>/2020/03/16/AWD%E6%AF%94%E8%B5%9B%E7%BB%8F%E9%AA%8C%E5%8F%8A%E5%91%BD%E4%BB%A4%E9%98%B2%E5%BE%A1%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="赛前准备"><a href="#赛前准备" class="headerlink" title="赛前准备"></a>赛前准备</h1><ul><li>win10</li><li>kali</li><li>winSCP</li><li>一些渗透常用工具及脚本</li></ul><h1 id="比赛开始"><a href="#比赛开始" class="headerlink" title="比赛开始"></a>比赛开始</h1><h2 id="拿到自己的服务器"><a href="#拿到自己的服务器" class="headerlink" title="拿到自己的服务器"></a>拿到自己的服务器</h2><ul><li><p>备份网站文件</p><pre><code class="shell">tar -zcvf web.tar.gz /var/www/</code></pre></li><li><p>修改数据库密码</p><ul><li><p>已知自己数据库密码</p><ul><li>使用命令 mysql -u root -pxxxx 进入数据库</li><li>set password = password(‘123456’);</li></ul></li><li><p>不知自己数据库密码</p><ul><li><p>进入/etc/my.cnf，在 mysqld 下面增加一行 skip-grant-tables</p></li><li><p>保存完之后重启服务</p></li><li><p>直接输入 mysql -u root -p ，最后回车进入数据库</p></li><li><p>use mysql; 更改数据库 </p></li><li><p>UPDATE user SET PASSWORD =password(“mima”) WHERE USER = ‘root’; 重置密码 </p><p>flush privileges; 刷新系统权限相关表 4 删除配置文件中的内容，重启 Mysql 服务。</p></li></ul></li></ul></li><li><p>查看是否有弱口令，更改一切弱口令</p><ul><li>查看自己的系统中是否有主办方留下的后门账户。因为用户的 UID 大于 500 的都是非 系统账号，500 以下的都为系统保留的账号</li></ul><pre><code class="shell">more /etc/passwd</code></pre><ul><li>发现后门账户后 userdel xxxx命令删除它</li></ul></li><li><p>关闭不必要端口，如远程登陆端口</p><ul><li>关闭不必要的端口，要求的服务端口不能关</li></ul><pre><code class="shell">netstat -anp #查看端口被哪个进程占用</code></pre><pre><code class="shell">kill -9 PID #杀掉进程</code></pre><pre><code class="shell">Netstat- anp | more #查看当前开启了哪些端口</code></pre></li><li><p>修改ssh密码</p></li></ul><pre><code class="shell">sudo passwd (user)(current) UNIX password:New password：New password：</code></pre><ul><li><p>拿到源码后D盾查杀  seay代码审计</p><ul><li>seay代码工具审计<pre><code>    出漏洞，加进批量脚本    修漏洞，会修就修，不会修就注释 不搞蹦网站就行    查看后门账号    关闭不必要的端口(后面有命令)    保留22，80</code></pre></li></ul></li><li><p>文件监控防shell</p><ul><li>使用chattr+i命令(在有root或sudo的权限下)<pre><code>    #lisattr   查看文件隐藏属性    #chattr +i 1.txt    防止某个关键文件被修改 这样所以用户都不能对该文件或者目录进行修改删除的操作（包括root）    #chattr -i 1.txt 取消隐藏属性 进行修改时使用    #chattr -R +i /var/www/html 将/var/www/html目录下的文件设置为不允许任何人修改</code></pre></li></ul></li><li><p>挂waf</p><ul><li>将waf.php传到要包含的文件的目录<pre><code>在页面中加入防护，有两种做法，根据情况二选一：    PHPCMS V9：\phpcms\base.php    PHPWIND8.7：\data\sql_config.php    DEDECMS5.7：\data\common.inc.php    DiscuzX2：\config\config_global.php    Wordpress：\wp-config.php    Metinfo：\include\head.php    在所需要防护的页面加入代码：        require_once(&#39;waf.php&#39;);这样就可以做到页面防注入、跨站。        如果想整站防注，就在网站的一个公用文件中添加上述代码来调用WAF        常用的php的WAF添加路径：    在每个文件最前加上上述代码    在php.ini中找到并添加：            Automatically add files before or after any PHP document.        auto_prepend_file = waf.php的路径;简便的方法，用一条命令解决，以php为例：    sudo find /var/www/html/path_you_want -type f -path &quot;*.php&quot; | xargs sed -i &quot;s/&lt;?php/&lt;?php\nrequire_once(&#39;\/tmp\/waf.php&#39;);\n/g&quot;    #意思就是查找需要加waf的目录下所有php文件，在头部添加一句，用require_once函数引入/tmp/waf.php文件。因为sed命令利用 / 区分文件中的原字符串和修改的字符串，所以我们要对 / 进行转义。类似于在单引号中再次使用单引号时我们也要用反斜杠转义。</code></pre>部署waf可能会导致服务不可用，部署后要密切留意自己服务器的状态</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>AWD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络安全,AWD</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
